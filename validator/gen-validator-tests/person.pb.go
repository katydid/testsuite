// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: person.proto

package main

import (
	bytes "bytes"
	compress_gzip "compress/gzip"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_protoc_gen_gogo_descriptor "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"
	io_ioutil "io/ioutil"
	math "math"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Person struct {
	Name                 *string    `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Addresses            []*Address `protobuf:"bytes,2,rep,name=Addresses" json:"Addresses,omitempty"`
	Telephone            *string    `protobuf:"bytes,3,opt,name=Telephone" json:"Telephone,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c9e10cf24b1156d, []int{0}
}
func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Person) GetAddresses() []*Address {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *Person) GetTelephone() string {
	if m != nil && m.Telephone != nil {
		return *m.Telephone
	}
	return ""
}

type Address struct {
	Number               *int64   `protobuf:"varint,1,opt,name=Number" json:"Number,omitempty"`
	Street               *string  `protobuf:"bytes,2,opt,name=Street" json:"Street,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c9e10cf24b1156d, []int{1}
}
func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetNumber() int64 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

func (m *Address) GetStreet() string {
	if m != nil && m.Street != nil {
		return *m.Street
	}
	return ""
}

func init() {
	proto.RegisterType((*Person)(nil), "main.Person")
	proto.RegisterType((*Address)(nil), "main.Address")
}

func init() { proto.RegisterFile("person.proto", fileDescriptor_4c9e10cf24b1156d) }

var fileDescriptor_4c9e10cf24b1156d = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x48, 0x2d, 0x2a,
	0xce, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcc, 0xcc, 0x93, 0xd2,
	0x4d, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcf, 0x4f, 0xcf, 0xd7,
	0x07, 0x4b, 0x26, 0x95, 0xa6, 0x81, 0x79, 0x60, 0x0e, 0x98, 0x05, 0xd1, 0xa4, 0x94, 0xcb, 0xc5,
	0x16, 0x00, 0x36, 0x44, 0x48, 0x88, 0x8b, 0xc5, 0x2f, 0x31, 0x37, 0x55, 0x82, 0x51, 0x81, 0x51,
	0x83, 0x33, 0x08, 0xcc, 0x16, 0xd2, 0xe6, 0xe2, 0x74, 0x4c, 0x49, 0x29, 0x4a, 0x2d, 0x2e, 0x4e,
	0x2d, 0x96, 0x60, 0x52, 0x60, 0xd6, 0xe0, 0x36, 0xe2, 0xd5, 0x03, 0x59, 0xa3, 0x07, 0x15, 0x0e,
	0x42, 0xc8, 0x0b, 0xc9, 0x70, 0x71, 0x86, 0xa4, 0xe6, 0xa4, 0x16, 0x64, 0xe4, 0xe7, 0xa5, 0x4a,
	0x30, 0x83, 0x4d, 0x41, 0x08, 0x58, 0xb1, 0x7c, 0x58, 0x20, 0xcf, 0xa8, 0x64, 0xc9, 0xc5, 0x0e,
	0xd5, 0x20, 0x24, 0xc6, 0xc5, 0xe6, 0x57, 0x9a, 0x9b, 0x94, 0x5a, 0x04, 0xb6, 0x91, 0x39, 0x08,
	0xca, 0x03, 0x89, 0x07, 0x97, 0x14, 0xa5, 0xa6, 0x96, 0x48, 0x30, 0x81, 0xcd, 0x80, 0xf2, 0x9c,
	0x58, 0x3e, 0x3c, 0x94, 0x63, 0x04, 0x04, 0x00, 0x00, 0xff, 0xff, 0x87, 0x11, 0x79, 0x04, 0xf3,
	0x00, 0x00, 0x00,
}

func (this *Person) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return PersonDescription()
}
func PersonDescription() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	d := &github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet{}
	var gzipped = []byte{
		// 3893 bytes of a gzipped FileDescriptorSet
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x5a, 0x5b, 0x70, 0xe3, 0xe6,
		0x75, 0x36, 0x6f, 0x12, 0x79, 0x48, 0x51, 0x10, 0x24, 0x6b, 0xb9, 0xf2, 0x65, 0x77, 0x69, 0x3b,
		0x96, 0xbd, 0xb1, 0x36, 0xb3, 0xde, 0x5d, 0x7b, 0xb1, 0x4d, 0x5c, 0x8a, 0xe2, 0x2a, 0x74, 0x25,
		0x92, 0x01, 0xa5, 0xf8, 0x92, 0xe9, 0x60, 0x20, 0xe0, 0x27, 0x85, 0x5d, 0x10, 0x40, 0x00, 0x70,
		0xd7, 0xda, 0xe9, 0x83, 0x3b, 0xee, 0x65, 0x32, 0xbd, 0x5f, 0x66, 0x9a, 0xb8, 0x8e, 0x9b, 0xa4,
		0xd3, 0xb8, 0x4d, 0xaf, 0xe9, 0x25, 0x6d, 0xd2, 0x97, 0xbe, 0xa4, 0xcd, 0x53, 0x67, 0xf2, 0xde,
		0x87, 0x76, 0xea, 0x99, 0xde, 0xdc, 0xd6, 0x6d, 0xf6, 0xa1, 0x33, 0xfb, 0xd2, 0xf9, 0x6f, 0x20,
		0x00, 0x52, 0x0b, 0x28, 0x33, 0xb6, 0x9f, 0x24, 0x9c, 0xff, 0x7c, 0x1f, 0xce, 0x7f, 0xfe, 0xf3,
		0x9f, 0x73, 0xfe, 0x1f, 0x84, 0xef, 0x49, 0x70, 0x76, 0x68, 0xdb, 0x43, 0x13, 0x5d, 0x70, 0x5c,
		0xdb, 0xb7, 0x0f, 0xc6, 0x83, 0x0b, 0x3a, 0xf2, 0x34, 0xd7, 0x70, 0x7c, 0xdb, 0xdd, 0x20, 0x32,
		0x71, 0x91, 0x6a, 0x6c, 0x70, 0x8d, 0xfa, 0x2e, 0x2c, 0x5d, 0x37, 0x4c, 0xb4, 0x15, 0x28, 0xf6,
		0x91, 0x2f, 0x3e, 0x0f, 0xf9, 0x81, 0x61, 0xa2, 0x5a, 0xe6, 0x6c, 0x6e, 0xbd, 0x7c, 0xf1, 0xf1,
		0x8d, 0x18, 0x68, 0x23, 0x8a, 0xe8, 0x61, 0xb1, 0x4c, 0x10, 0xf5, 0x77, 0xf3, 0xb0, 0x3c, 0x63,
		0x54, 0x14, 0x21, 0x6f, 0xa9, 0x23, 0xcc, 0x98, 0x59, 0x2f, 0xc9, 0xe4, 0x7f, 0xb1, 0x06, 0xf3,
		0x8e, 0xaa, 0xdd, 0x54, 0x87, 0xa8, 0x96, 0x25, 0x62, 0xfe, 0x28, 0x3e, 0x0a, 0xa0, 0x23, 0x07,
		0x59, 0x3a, 0xb2, 0xb4, 0xa3, 0x5a, 0xee, 0x6c, 0x6e, 0xbd, 0x24, 0x87, 0x24, 0xe2, 0x79, 0x58,
		0x72, 0xc6, 0x07, 0xa6, 0xa1, 0x29, 0x21, 0x35, 0x38, 0x9b, 0x5b, 0x2f, 0xc8, 0x02, 0x1d, 0xd8,
		0x9a, 0x28, 0x3f, 0x09, 0x8b, 0xb7, 0x91, 0x7a, 0x33, 0xac, 0x5a, 0x26, 0xaa, 0x55, 0x2c, 0x0e,
		0x29, 0x36, 0xa1, 0x32, 0x42, 0x9e, 0xa7, 0x0e, 0x91, 0xe2, 0x1f, 0x39, 0xa8, 0x96, 0x27, 0xb3,
		0x3f, 0x3b, 0x35, 0xfb, 0xf8, 0xcc, 0xcb, 0x0c, 0xb5, 0x77, 0xe4, 0x20, 0xb1, 0x01, 0x25, 0x64,
		0x8d, 0x47, 0x94, 0xa1, 0x70, 0x8c, 0xff, 0x5a, 0xd6, 0x78, 0x14, 0x67, 0x29, 0x62, 0x18, 0xa3,
		0x98, 0xf7, 0x90, 0x7b, 0xcb, 0xd0, 0x50, 0x6d, 0x8e, 0x10, 0x3c, 0x39, 0x45, 0xd0, 0xa7, 0xe3,
		0x71, 0x0e, 0x8e, 0x13, 0x9b, 0x50, 0x42, 0xaf, 0xf9, 0xc8, 0xf2, 0x0c, 0xdb, 0xaa, 0xcd, 0x13,
		0x92, 0x27, 0x66, 0xac, 0x22, 0x32, 0xf5, 0x38, 0xc5, 0x04, 0x27, 0x5e, 0x81, 0x79, 0xdb, 0xf1,
		0x0d, 0xdb, 0xf2, 0x6a, 0xc5, 0xb3, 0x99, 0xf5, 0xf2, 0xc5, 0x87, 0x67, 0x06, 0x42, 0x97, 0xea,
		0xc8, 0x5c, 0x59, 0x6c, 0x83, 0xe0, 0xd9, 0x63, 0x57, 0x43, 0x8a, 0x66, 0xeb, 0x48, 0x31, 0xac,
		0x81, 0x5d, 0x2b, 0x11, 0x82, 0x33, 0xd3, 0x13, 0x21, 0x8a, 0x4d, 0x5b, 0x47, 0x6d, 0x6b, 0x60,
		0xcb, 0x55, 0x2f, 0xf2, 0x2c, 0xae, 0xc2, 0x9c, 0x77, 0x64, 0xf9, 0xea, 0x6b, 0xb5, 0x0a, 0x89,
		0x10, 0xf6, 0x54, 0xff, 0xf6, 0x1c, 0x2c, 0xa6, 0x09, 0xb1, 0x6b, 0x50, 0x18, 0xe0, 0x59, 0xd6,
		0xb2, 0x27, 0xf1, 0x01, 0xc5, 0x44, 0x9d, 0x38, 0xf7, 0x43, 0x3a, 0xb1, 0x01, 0x65, 0x0b, 0x79,
		0x3e, 0xd2, 0x69, 0x44, 0xe4, 0x52, 0xc6, 0x14, 0x50, 0xd0, 0x74, 0x48, 0xe5, 0x7f, 0xa8, 0x90,
		0x7a, 0x19, 0x16, 0x03, 0x93, 0x14, 0x57, 0xb5, 0x86, 0x3c, 0x36, 0x2f, 0x24, 0x59, 0xb2, 0xd1,
		0xe2, 0x38, 0x19, 0xc3, 0xe4, 0x2a, 0x8a, 0x3c, 0x8b, 0x5b, 0x00, 0xb6, 0x85, 0xec, 0x81, 0xa2,
		0x23, 0xcd, 0xac, 0x15, 0x8f, 0xf1, 0x52, 0x17, 0xab, 0x4c, 0x79, 0xc9, 0xa6, 0x52, 0xcd, 0x14,
		0xaf, 0x4e, 0x42, 0x6d, 0xfe, 0x98, 0x48, 0xd9, 0xa5, 0x9b, 0x6c, 0x2a, 0xda, 0xf6, 0xa1, 0xea,
		0x22, 0x1c, 0xf7, 0x48, 0x67, 0x33, 0x2b, 0x11, 0x23, 0x36, 0x12, 0x67, 0x26, 0x33, 0x18, 0x9d,
		0xd8, 0x82, 0x1b, 0x7e, 0x14, 0x1f, 0x83, 0x40, 0xa0, 0x90, 0xb0, 0x02, 0x92, 0x85, 0x2a, 0x5c,
		0xd8, 0x51, 0x47, 0x68, 0xed, 0x0e, 0x54, 0xa3, 0xee, 0x11, 0x57, 0xa0, 0xe0, 0xf9, 0xaa, 0xeb,
		0x93, 0x28, 0x2c, 0xc8, 0xf4, 0x41, 0x14, 0x20, 0x87, 0x2c, 0x9d, 0x64, 0xb9, 0x82, 0x8c, 0xff,
		0x15, 0x7f, 0x74, 0x32, 0xe1, 0x1c, 0x99, 0xf0, 0xc7, 0xa6, 0x57, 0x34, 0xc2, 0x1c, 0x9f, 0xf7,
		0xda, 0x73, 0xb0, 0x10, 0x99, 0x40, 0xda, 0x57, 0xd7, 0x7f, 0x02, 0x1e, 0x9c, 0x49, 0x2d, 0xbe,
		0x0c, 0x2b, 0x63, 0xcb, 0xb0, 0x7c, 0xe4, 0x3a, 0x2e, 0xc2, 0x11, 0x4b, 0x5f, 0x55, 0xfb, 0x97,
		0xf9, 0x63, 0x62, 0x6e, 0x3f, 0xac, 0x4d, 0x59, 0xe4, 0xe5, 0xf1, 0xb4, 0xf0, 0xe9, 0x52, 0xf1,
		0x5f, 0xe7, 0x85, 0xd7, 0x5f, 0x7f, 0xfd, 0xf5, 0x6c, 0xfd, 0x8b, 0x73, 0xb0, 0x32, 0x6b, 0xcf,
		0xcc, 0xdc, 0xbe, 0xab, 0x30, 0x67, 0x8d, 0x47, 0x07, 0xc8, 0x25, 0x4e, 0x2a, 0xc8, 0xec, 0x49,
		0x6c, 0x40, 0xc1, 0x54, 0x0f, 0x90, 0x59, 0xcb, 0x9f, 0xcd, 0xac, 0x57, 0x2f, 0x9e, 0x4f, 0xb5,
		0x2b, 0x37, 0x76, 0x30, 0x44, 0xa6, 0x48, 0xf1, 0x53, 0x90, 0x67, 0x29, 0x1a, 0x33, 0x3c, 0x9d,
		0x8e, 0x01, 0xef, 0x25, 0x99, 0xe0, 0xc4, 0x87, 0xa0, 0x84, 0xff, 0xd2, 0xd8, 0x98, 0x23, 0x36,
		0x17, 0xb1, 0x00, 0xc7, 0x85, 0xb8, 0x06, 0x45, 0xb2, 0x4d, 0x74, 0xc4, 0x4b, 0x5b, 0xf0, 0x8c,
		0x03, 0x4b, 0x47, 0x03, 0x75, 0x6c, 0xfa, 0xca, 0x2d, 0xd5, 0x1c, 0x23, 0x12, 0xf0, 0x25, 0xb9,
		0xc2, 0x84, 0x9f, 0xc5, 0x32, 0xf1, 0x0c, 0x94, 0xe9, 0xae, 0x32, 0x2c, 0x1d, 0xbd, 0x46, 0xb2,
		0x67, 0x41, 0xa6, 0x1b, 0xad, 0x8d, 0x25, 0xf8, 0xf5, 0x37, 0x3c, 0xdb, 0xe2, 0xa1, 0x49, 0x5e,
		0x81, 0x05, 0xe4, 0xf5, 0xcf, 0xc5, 0x13, 0xf7, 0x23, 0xb3, 0xa7, 0x17, 0x8f, 0xa9, 0xfa, 0xb7,
		0xb2, 0x90, 0x27, 0xf9, 0x62, 0x11, 0xca, 0x7b, 0xaf, 0xf4, 0x5a, 0xca, 0x56, 0x77, 0x7f, 0x73,
		0xa7, 0x25, 0x64, 0xc4, 0x2a, 0x00, 0x11, 0x5c, 0xdf, 0xe9, 0x36, 0xf6, 0x84, 0x6c, 0xf0, 0xdc,
		0xee, 0xec, 0x5d, 0xb9, 0x24, 0xe4, 0x02, 0xc0, 0x3e, 0x15, 0xe4, 0xc3, 0x0a, 0xcf, 0x5e, 0x14,
		0x0a, 0xa2, 0x00, 0x15, 0x4a, 0xd0, 0x7e, 0xb9, 0xb5, 0x75, 0xe5, 0x92, 0x30, 0x17, 0x95, 0x3c,
		0x7b, 0x51, 0x98, 0x17, 0x17, 0xa0, 0x44, 0x24, 0x9b, 0xdd, 0xee, 0x8e, 0x50, 0x0c, 0x38, 0xfb,
		0x7b, 0x72, 0xbb, 0xb3, 0x2d, 0x94, 0x02, 0xce, 0x6d, 0xb9, 0xbb, 0xdf, 0x13, 0x20, 0x60, 0xd8,
		0x6d, 0xf5, 0xfb, 0x8d, 0xed, 0x96, 0x50, 0x0e, 0x34, 0x36, 0x5f, 0xd9, 0x6b, 0xf5, 0x85, 0x4a,
		0xc4, 0xac, 0x67, 0x2f, 0x0a, 0x0b, 0xc1, 0x2b, 0x5a, 0x9d, 0xfd, 0x5d, 0xa1, 0x2a, 0x2e, 0xc1,
		0x02, 0x7d, 0x05, 0x37, 0x62, 0x31, 0x26, 0xba, 0x72, 0x49, 0x10, 0x26, 0x86, 0x50, 0x96, 0xa5,
		0x88, 0xe0, 0xca, 0x25, 0x41, 0xac, 0x37, 0xa1, 0x40, 0xa2, 0x4b, 0x14, 0xa1, 0xba, 0xd3, 0xd8,
		0x6c, 0xed, 0x28, 0xdd, 0xde, 0x5e, 0xbb, 0xdb, 0x69, 0xec, 0x08, 0x99, 0x89, 0x4c, 0x6e, 0x7d,
		0x66, 0xbf, 0x2d, 0xb7, 0xb6, 0x84, 0x6c, 0x58, 0xd6, 0x6b, 0x35, 0xf6, 0x5a, 0x5b, 0x42, 0xae,
		0xae, 0xc1, 0xca, 0xac, 0x3c, 0x39, 0x73, 0x67, 0x84, 0x96, 0x38, 0x7b, 0xcc, 0x12, 0x13, 0xae,
		0xa9, 0x25, 0xfe, 0xe7, 0x2c, 0x2c, 0xcf, 0xa8, 0x15, 0x33, 0x5f, 0xf2, 0x02, 0x14, 0x68, 0x88,
		0xd2, 0xea, 0xf9, 0xd4, 0xcc, 0xa2, 0x43, 0x02, 0x76, 0xaa, 0x82, 0x12, 0x5c, 0xb8, 0x83, 0xc8,
		0x1d, 0xd3, 0x41, 0x60, 0x8a, 0xa9, 0x9c, 0xfe, 0xe3, 0x53, 0x39, 0x9d, 0x96, 0xbd, 0x2b, 0x69,
		0xca, 0x1e, 0x91, 0x9d, 0x2c, 0xb7, 0x17, 0x66, 0xe4, 0xf6, 0x6b, 0xb0, 0x34, 0x45, 0x94, 0x3a,
		0xc7, 0xbe, 0x91, 0x81, 0xda, 0x71, 0xce, 0x49, 0xc8, 0x74, 0xd9, 0x48, 0xa6, 0xbb, 0x16, 0xf7,
		0xe0, 0xb9, 0xe3, 0x17, 0x61, 0x6a, 0xad, 0xdf, 0xc9, 0xc0, 0xea, 0xec, 0x4e, 0x71, 0xa6, 0x0d,
		0x9f, 0x82, 0xb9, 0x11, 0xf2, 0x0f, 0x6d, 0xde, 0x2d, 0x7d, 0x6c, 0x46, 0x0d, 0xc6, 0xc3, 0xf1,
		0xc5, 0x66, 0xa8, 0x70, 0x11, 0xcf, 0x1d, 0xd7, 0xee, 0x51, 0x6b, 0xa6, 0x2c, 0xfd, 0x42, 0x16,
		0x1e, 0x9c, 0x49, 0x3e, 0xd3, 0xd0, 0x47, 0x00, 0x0c, 0xcb, 0x19, 0xfb, 0xb4, 0x23, 0xa2, 0x09,
		0xb6, 0x44, 0x24, 0x24, 0x79, 0xe1, 0xe4, 0x39, 0xf6, 0x83, 0xf1, 0x1c, 0x19, 0x07, 0x2a, 0x22,
		0x0a, 0xcf, 0x4f, 0x0c, 0xcd, 0x13, 0x43, 0x1f, 0x3d, 0x66, 0xa6, 0x53, 0x81, 0xf9, 0x09, 0x10,
		0x34, 0xd3, 0x40, 0x96, 0xaf, 0x78, 0xbe, 0x8b, 0xd4, 0x91, 0x61, 0x0d, 0x49, 0x05, 0x29, 0x4a,
		0x85, 0x81, 0x6a, 0x7a, 0x48, 0x5e, 0xa4, 0xc3, 0x7d, 0x3e, 0x8a, 0x11, 0x24, 0x80, 0xdc, 0x10,
		0x62, 0x2e, 0x82, 0xa0, 0xc3, 0x01, 0xa2, 0xfe, 0xf3, 0x25, 0x28, 0x87, 0xfa, 0x6a, 0xf1, 0x1c,
		0x54, 0x6e, 0xa8, 0xb7, 0x54, 0x85, 0x9f, 0x95, 0xa8, 0x27, 0xca, 0x58, 0xd6, 0x63, 0xe7, 0xa5,
		0x4f, 0xc0, 0x0a, 0x51, 0xb1, 0xc7, 0x3e, 0x72, 0x15, 0xcd, 0x54, 0x3d, 0x8f, 0x38, 0xad, 0x48,
		0x54, 0x45, 0x3c, 0xd6, 0xc5, 0x43, 0x4d, 0x3e, 0x22, 0x5e, 0x86, 0x65, 0x82, 0x18, 0x8d, 0x4d,
		0xdf, 0x70, 0x4c, 0xa4, 0xe0, 0xd3, 0x9b, 0x47, 0x2a, 0x49, 0x60, 0xd9, 0x12, 0xd6, 0xd8, 0x65,
		0x0a, 0xd8, 0x22, 0x4f, 0xdc, 0x82, 0x47, 0x08, 0x6c, 0x88, 0x2c, 0xe4, 0xaa, 0x3e, 0x52, 0xd0,
		0xe7, 0xc7, 0xaa, 0xe9, 0x29, 0xaa, 0xa5, 0x2b, 0x87, 0xaa, 0x77, 0x58, 0x5b, 0xc1, 0x04, 0x9b,
		0xd9, 0x5a, 0x46, 0x3e, 0x8d, 0x15, 0xb7, 0x99, 0x5e, 0x8b, 0xa8, 0x35, 0x2c, 0xfd, 0xd3, 0xaa,
		0x77, 0x28, 0x4a, 0xb0, 0x4a, 0x58, 0x3c, 0xdf, 0x35, 0xac, 0xa1, 0xa2, 0x1d, 0x22, 0xed, 0xa6,
		0x32, 0xf6, 0x07, 0xcf, 0xd7, 0x1e, 0x0a, 0xbf, 0x9f, 0x58, 0xd8, 0x27, 0x3a, 0x4d, 0xac, 0xb2,
		0xef, 0x0f, 0x9e, 0x17, 0xfb, 0x50, 0xc1, 0x8b, 0x31, 0x32, 0xee, 0x20, 0x65, 0x60, 0xbb, 0xa4,
		0x34, 0x56, 0x67, 0xa4, 0xa6, 0x90, 0x07, 0x37, 0xba, 0x0c, 0xb0, 0x6b, 0xeb, 0x48, 0x2a, 0xf4,
		0x7b, 0xad, 0xd6, 0x96, 0x5c, 0xe6, 0x2c, 0xd7, 0x6d, 0x17, 0x07, 0xd4, 0xd0, 0x0e, 0x1c, 0x5c,
		0xa6, 0x01, 0x35, 0xb4, 0xb9, 0x7b, 0x2f, 0xc3, 0xb2, 0xa6, 0xd1, 0x39, 0x1b, 0x9a, 0xc2, 0xce,
		0x58, 0x5e, 0x4d, 0x88, 0x38, 0x4b, 0xd3, 0xb6, 0xa9, 0x02, 0x8b, 0x71, 0x4f, 0xbc, 0x0a, 0x0f,
		0x4e, 0x9c, 0x15, 0x06, 0x2e, 0x4d, 0xcd, 0x32, 0x0e, 0xbd, 0x0c, 0xcb, 0xce, 0xd1, 0x34, 0x50,
		0x8c, 0xbc, 0xd1, 0x39, 0x8a, 0xc3, 0x9e, 0x83, 0x15, 0xe7, 0xd0, 0x99, 0xc6, 0x3d, 0x1d, 0xc6,
		0x89, 0xce, 0xa1, 0x13, 0x07, 0x3e, 0x41, 0x0e, 0xdc, 0x2e, 0xd2, 0x54, 0x1f, 0xe9, 0xb5, 0x53,
		0x61, 0xf5, 0xd0, 0x80, 0x78, 0x01, 0x04, 0x4d, 0x53, 0x90, 0xa5, 0x1e, 0x98, 0x48, 0x51, 0x5d,
		0x64, 0xa9, 0x5e, 0xed, 0x4c, 0x58, 0xb9, 0xaa, 0x69, 0x2d, 0x32, 0xda, 0x20, 0x83, 0xe2, 0xd3,
		0xb0, 0x64, 0x1f, 0xdc, 0xd0, 0x68, 0x48, 0x2a, 0x8e, 0x8b, 0x06, 0xc6, 0x6b, 0xb5, 0xc7, 0x89,
		0x7f, 0x17, 0xf1, 0x00, 0x09, 0xc8, 0x1e, 0x11, 0x8b, 0x4f, 0x81, 0xa0, 0x79, 0x87, 0xaa, 0xeb,
		0x90, 0x9c, 0xec, 0x39, 0xaa, 0x86, 0x6a, 0x4f, 0x50, 0x55, 0x2a, 0xef, 0x70, 0x31, 0xde, 0x12,
		0xde, 0x6d, 0x63, 0xe0, 0x73, 0xc6, 0x27, 0xe9, 0x96, 0x20, 0x32, 0xc6, 0xb6, 0x0e, 0x02, 0x76,
		0x45, 0xe4, 0xc5, 0xeb, 0x44, 0xad, 0xea, 0x1c, 0x3a, 0xe1, 0xf7, 0x3e, 0x06, 0x0b, 0x58, 0x73,
		0xf2, 0xd2, 0xa7, 0x68, 0x43, 0xe6, 0x1c, 0x86, 0xde, 0x78, 0x09, 0x56, 0xb1, 0xd2, 0x08, 0xf9,
		0xaa, 0xae, 0xfa, 0x6a, 0x48, 0xfb, 0xe3, 0x44, 0x1b, 0xfb, 0x7d, 0x97, 0x0d, 0x46, 0xec, 0x74,
		0xc7, 0x07, 0x47, 0x41, 0x64, 0x3d, 0x43, 0xed, 0xc4, 0x32, 0x1e, 0x5b, 0x1f, 0x58, 0xd3, 0x5d,
		0x97, 0xa0, 0x12, 0x0e, 0x7c, 0xb1, 0x04, 0x34, 0xf4, 0x85, 0x0c, 0xee, 0x82, 0x9a, 0xdd, 0x2d,
		0xdc, 0xbf, 0xbc, 0xda, 0x12, 0xb2, 0xb8, 0x8f, 0xda, 0x69, 0xef, 0xb5, 0x14, 0x79, 0xbf, 0xb3,
		0xd7, 0xde, 0x6d, 0x09, 0xb9, 0x70, 0xc3, 0xfe, 0xdd, 0x2c, 0x54, 0xa3, 0x67, 0x2f, 0xf1, 0x47,
		0xe0, 0x14, 0xbf, 0x28, 0xf1, 0x90, 0xaf, 0xdc, 0x36, 0x5c, 0xb2, 0x17, 0x47, 0x2a, 0xad, 0x8b,
		0x41, 0x34, 0xac, 0x30, 0xad, 0x3e, 0xf2, 0x5f, 0x32, 0x5c, 0xbc, 0xd3, 0x46, 0xaa, 0x2f, 0xee,
		0xc0, 0x19, 0xcb, 0x56, 0x3c, 0x5f, 0xb5, 0x74, 0xd5, 0xd5, 0x95, 0xc9, 0x15, 0x95, 0xa2, 0x6a,
		0x1a, 0xf2, 0x3c, 0x9b, 0xd6, 0xc0, 0x80, 0xe5, 0x61, 0xcb, 0xee, 0x33, 0xe5, 0x49, 0x71, 0x68,
		0x30, 0xd5, 0x58, 0xe4, 0xe6, 0x8e, 0x8b, 0xdc, 0x87, 0xa0, 0x34, 0x52, 0x1d, 0x05, 0x59, 0xbe,
		0x7b, 0x44, 0x3a, 0xee, 0xa2, 0x5c, 0x1c, 0xa9, 0x4e, 0x0b, 0x3f, 0x7f, 0x38, 0x07, 0x9f, 0x7f,
		0xc8, 0x41, 0x25, 0xdc, 0x75, 0xe3, 0x43, 0x8c, 0x46, 0x0a, 0x54, 0x86, 0xa4, 0xb0, 0xc7, 0xee,
		0xdb, 0xa3, 0x6f, 0x34, 0x71, 0xe5, 0x92, 0xe6, 0x68, 0x2f, 0x2c, 0x53, 0x24, 0xee, 0x1a, 0x70,
		0x68, 0x21, 0xda, 0x7b, 0x14, 0x65, 0xf6, 0x24, 0x6e, 0xc3, 0xdc, 0x0d, 0x8f, 0x70, 0xcf, 0x11,
		0xee, 0xc7, 0xef, 0xcf, 0xfd, 0x62, 0x9f, 0x90, 0x97, 0x5e, 0xec, 0x2b, 0x9d, 0xae, 0xbc, 0xdb,
		0xd8, 0x91, 0x19, 0x5c, 0x3c, 0x0d, 0x79, 0x53, 0xbd, 0x73, 0x14, 0xad, 0x71, 0x44, 0x94, 0xd6,
		0xf1, 0xa7, 0x21, 0x7f, 0x1b, 0xa9, 0x37, 0xa3, 0x95, 0x85, 0x88, 0x3e, 0xc0, 0xd0, 0xbf, 0x00,
		0x05, 0xe2, 0x2f, 0x11, 0x80, 0x79, 0x4c, 0x78, 0x40, 0x2c, 0x42, 0xbe, 0xd9, 0x95, 0x71, 0xf8,
		0x0b, 0x50, 0xa1, 0x52, 0xa5, 0xd7, 0x6e, 0x35, 0x5b, 0x42, 0xb6, 0x7e, 0x19, 0xe6, 0xa8, 0x13,
		0xf0, 0xd6, 0x08, 0xdc, 0x20, 0x3c, 0xc0, 0x1e, 0x19, 0x47, 0x86, 0x8f, 0xee, 0xef, 0x6e, 0xb6,
		0x64, 0x21, 0x1b, 0x5e, 0x5e, 0x0f, 0x2a, 0xe1, 0x86, 0xfb, 0xc3, 0x89, 0xa9, 0xef, 0x64, 0xa0,
		0x1c, 0x6a, 0xa0, 0x71, 0xe7, 0xa3, 0x9a, 0xa6, 0x7d, 0x5b, 0x51, 0x4d, 0x43, 0xf5, 0x58, 0x50,
		0x00, 0x11, 0x35, 0xb0, 0x24, 0xed, 0xa2, 0x7d, 0x28, 0xc6, 0xbf, 0x9d, 0x01, 0x21, 0xde, 0xbb,
		0xc6, 0x0c, 0xcc, 0x7c, 0xa4, 0x06, 0xbe, 0x95, 0x81, 0x6a, 0xb4, 0x61, 0x8d, 0x99, 0x77, 0xee,
		0x23, 0x35, 0xef, 0x1f, 0xb3, 0xb0, 0x10, 0x69, 0x53, 0xd3, 0x5a, 0xf7, 0x79, 0x58, 0x32, 0x74,
		0x34, 0x72, 0x6c, 0x1f, 0x59, 0xda, 0x91, 0x62, 0xa2, 0x5b, 0xc8, 0xac, 0xd5, 0x49, 0xa2, 0xb8,
		0x70, 0xff, 0x46, 0x78, 0xa3, 0x3d, 0xc1, 0xed, 0x60, 0x98, 0xb4, 0xdc, 0xde, 0x6a, 0xed, 0xf6,
		0xba, 0x7b, 0xad, 0x4e, 0xf3, 0x15, 0x65, 0xbf, 0xf3, 0x63, 0x9d, 0xee, 0x4b, 0x1d, 0x59, 0x30,
		0x62, 0x6a, 0x1f, 0xe0, 0x56, 0xef, 0x81, 0x10, 0x37, 0x4a, 0x3c, 0x05, 0xb3, 0xcc, 0x12, 0x1e,
		0x10, 0x97, 0x61, 0xb1, 0xd3, 0x55, 0xfa, 0xed, 0xad, 0x96, 0xd2, 0xba, 0x7e, 0xbd, 0xd5, 0xdc,
		0xeb, 0xd3, 0xab, 0x8d, 0x40, 0x7b, 0x2f, 0xba, 0xa9, 0xdf, 0xcc, 0xc1, 0xf2, 0x0c, 0x4b, 0xc4,
		0x06, 0x3b, 0x94, 0xd0, 0x73, 0xd2, 0x33, 0x69, 0xac, 0xdf, 0xc0, 0x5d, 0x41, 0x4f, 0x75, 0x7d,
		0x76, 0x86, 0x79, 0x0a, 0xb0, 0x97, 0x2c, 0xdf, 0x18, 0x18, 0xc8, 0x65, 0x37, 0x41, 0xf4, 0xa4,
		0xb2, 0x38, 0x91, 0xd3, 0xcb, 0xa0, 0x8f, 0x83, 0xe8, 0xd8, 0x9e, 0xe1, 0x1b, 0xb7, 0x90, 0x62,
		0x58, 0xfc, 0xda, 0x08, 0x9f, 0x5c, 0xf2, 0xb2, 0xc0, 0x47, 0xda, 0x96, 0x1f, 0x68, 0x5b, 0x68,
		0xa8, 0xc6, 0xb4, 0x71, 0x02, 0xcf, 0xc9, 0x02, 0x1f, 0x09, 0xb4, 0xcf, 0x41, 0x45, 0xb7, 0xc7,
		0xb8, 0x9d, 0xa3, 0x7a, 0xb8, 0x5e, 0x64, 0xe4, 0x32, 0x95, 0x05, 0x2a, 0xac, 0x51, 0x9f, 0xdc,
		0x57, 0x55, 0xe4, 0x32, 0x95, 0x51, 0x95, 0x27, 0x61, 0x51, 0x1d, 0x0e, 0x5d, 0x4c, 0xce, 0x89,
		0xe8, 0xd1, 0xa3, 0x1a, 0x88, 0x89, 0xe2, 0xda, 0x8b, 0x50, 0xe4, 0x7e, 0xc0, 0x25, 0x19, 0x7b,
		0x42, 0x71, 0xe8, 0x79, 0x3a, 0xbb, 0x5e, 0x92, 0x8b, 0x16, 0x1f, 0x3c, 0x07, 0x15, 0xc3, 0x53,
		0x26, 0xd7, 0xef, 0xd9, 0xb3, 0xd9, 0xf5, 0xa2, 0x5c, 0x36, 0xbc, 0xe0, 0xea, 0xb2, 0xfe, 0x4e,
		0x16, 0xaa, 0xd1, 0xcf, 0x07, 0xe2, 0x16, 0x14, 0x4d, 0x5b, 0x53, 0x49, 0x68, 0xd1, 0x6f, 0x57,
		0xeb, 0x09, 0x5f, 0x1c, 0x36, 0x76, 0x98, 0xbe, 0x1c, 0x20, 0xd7, 0xfe, 0x3e, 0x03, 0x45, 0x2e,
		0x16, 0x57, 0x21, 0xef, 0xa8, 0xfe, 0x21, 0xa1, 0x2b, 0x6c, 0x66, 0x85, 0x8c, 0x4c, 0x9e, 0xb1,
		0xdc, 0x73, 0x54, 0x8b, 0x84, 0x00, 0x93, 0xe3, 0x67, 0xbc, 0xae, 0x26, 0x52, 0x75, 0x72, 0xae,
		0xb1, 0x47, 0x23, 0x64, 0xf9, 0x1e, 0x5f, 0x57, 0x26, 0x6f, 0x32, 0xb1, 0x78, 0x1e, 0x96, 0x7c,
		0x57, 0x35, 0xcc, 0x88, 0x6e, 0x9e, 0xe8, 0x0a, 0x7c, 0x20, 0x50, 0x96, 0xe0, 0x34, 0xe7, 0xd5,
		0x91, 0xaf, 0x6a, 0x87, 0x48, 0x9f, 0x80, 0xe6, 0xc8, 0xfd, 0xc5, 0x29, 0xa6, 0xb0, 0xc5, 0xc6,
		0x39, 0xb6, 0xfe, 0xfd, 0x0c, 0x2c, 0xf1, 0x93, 0x98, 0x1e, 0x38, 0x6b, 0x17, 0x40, 0xb5, 0x2c,
		0xdb, 0x0f, 0xbb, 0x6b, 0x3a, 0x94, 0xa7, 0x70, 0x1b, 0x8d, 0x00, 0x24, 0x87, 0x08, 0xd6, 0x46,
		0x00, 0x93, 0x91, 0x63, 0xdd, 0x76, 0x06, 0xca, 0xec, 0xdb, 0x10, 0xf9, 0xc0, 0x48, 0xcf, 0xee,
		0x40, 0x45, 0xf8, 0xc8, 0x26, 0xae, 0x40, 0xe1, 0x00, 0x0d, 0x0d, 0x8b, 0xdd, 0xf8, 0xd2, 0x07,
		0x7e, 0xc3, 0x92, 0x0f, 0x6e, 0x58, 0x36, 0x3f, 0x07, 0xcb, 0x9a, 0x3d, 0x8a, 0x9b, 0xbb, 0x29,
		0xc4, 0xee, 0x0f, 0xbc, 0x4f, 0x67, 0x5e, 0x85, 0x49, 0x8b, 0xf9, 0x7f, 0x99, 0xcc, 0xd7, 0xb2,
		0xb9, 0xed, 0xde, 0xe6, 0x37, 0xb2, 0x6b, 0xdb, 0x14, 0xda, 0xe3, 0x33, 0x95, 0xd1, 0xc0, 0x44,
		0x1a, 0xb6, 0x1e, 0xbe, 0x7e, 0x1e, 0x9e, 0x19, 0x1a, 0xfe, 0xe1, 0xf8, 0x60, 0x43, 0xb3, 0x47,
		0x17, 0x86, 0xf6, 0xd0, 0x9e, 0x7c, 0x53, 0xc5, 0x4f, 0xe4, 0x81, 0xfc, 0xc7, 0xbe, 0xab, 0x96,
		0x02, 0xe9, 0x5a, 0xe2, 0x47, 0x58, 0xa9, 0x03, 0xcb, 0x4c, 0x59, 0x21, 0x1f, 0x76, 0xe8, 0xf1,
		0x44, 0xbc, 0xef, 0xe5, 0x58, 0xed, 0x9b, 0xef, 0x92, 0x72, 0x2d, 0x2f, 0x31, 0x28, 0x1e, 0xa3,
		0x27, 0x18, 0x49, 0x86, 0x07, 0x23, 0x7c, 0x74, 0x6b, 0x22, 0x37, 0x81, 0xf1, 0xbb, 0x8c, 0x71,
		0x39, 0xc4, 0xd8, 0x67, 0x50, 0xa9, 0x09, 0x0b, 0x27, 0xe1, 0xfa, 0x5b, 0xc6, 0x55, 0x41, 0x61,
		0x92, 0x6d, 0x58, 0x24, 0x24, 0xda, 0xd8, 0xf3, 0xed, 0x11, 0xc9, 0x7b, 0xf7, 0xa7, 0xf9, 0xbb,
		0x77, 0xe9, 0x5e, 0xa9, 0x62, 0x58, 0x33, 0x40, 0x49, 0x12, 0x90, 0x6f, 0x59, 0x3a, 0xd2, 0xcc,
		0x04, 0x86, 0xef, 0x31, 0x43, 0x02, 0x7d, 0xe9, 0xb3, 0xb0, 0x82, 0xff, 0x27, 0x69, 0x29, 0x6c,
		0x49, 0xf2, 0x4d, 0x5a, 0xed, 0xfb, 0x6f, 0xd0, 0xed, 0xb8, 0x1c, 0x10, 0x84, 0x6c, 0x0a, 0xad,
		0xe2, 0x10, 0xf9, 0x3e, 0x72, 0x3d, 0x45, 0x35, 0x67, 0x99, 0x17, 0xba, 0x8a, 0xa8, 0x7d, 0xe9,
		0xbd, 0xe8, 0x2a, 0x6e, 0x53, 0x64, 0xc3, 0x34, 0xa5, 0x7d, 0x38, 0x35, 0x23, 0x2a, 0x52, 0x70,
		0xbe, 0xc9, 0x38, 0x57, 0xa6, 0x22, 0x03, 0xd3, 0xf6, 0x80, 0xcb, 0x83, 0xb5, 0x4c, 0xc1, 0xf9,
		0x9b, 0x8c, 0x53, 0x64, 0x58, 0xbe, 0xa4, 0x98, 0xf1, 0x45, 0x58, 0xba, 0x85, 0xdc, 0x03, 0xdb,
		0x63, 0xd7, 0x3f, 0x29, 0xe8, 0xde, 0x62, 0x74, 0x8b, 0x0c, 0x48, 0xee, 0x83, 0x30, 0xd7, 0x55,
		0x28, 0x0e, 0x54, 0x0d, 0xa5, 0xa0, 0xf8, 0x32, 0xa3, 0x98, 0xc7, 0xfa, 0x18, 0xda, 0x80, 0xca,
		0xd0, 0x66, 0x95, 0x29, 0x19, 0xfe, 0x36, 0x83, 0x97, 0x39, 0x86, 0x51, 0x38, 0xb6, 0x33, 0x36,
		0x71, 0xd9, 0x4a, 0xa6, 0xf8, 0x2d, 0x4e, 0xc1, 0x31, 0x8c, 0xe2, 0x04, 0x6e, 0xfd, 0x0a, 0xa7,
		0xf0, 0x42, 0xfe, 0x7c, 0x01, 0xca, 0xb6, 0x65, 0x1e, 0xd9, 0x56, 0x1a, 0x23, 0xbe, 0xca, 0x18,
		0x80, 0x41, 0x30, 0xc1, 0x35, 0x28, 0xa5, 0x5d, 0x88, 0xdf, 0x79, 0x8f, 0x6f, 0x0f, 0xbe, 0x02,
		0xdb, 0xb0, 0xc8, 0x13, 0x94, 0x61, 0x5b, 0x29, 0x28, 0xbe, 0xce, 0x28, 0xaa, 0x21, 0x18, 0x9b,
		0x86, 0x8f, 0x3c, 0x7f, 0x88, 0xd2, 0x90, 0xbc, 0xc3, 0xa7, 0xc1, 0x20, 0xcc, 0x95, 0x07, 0xc8,
		0xd2, 0x0e, 0xd3, 0x31, 0xfc, 0x2e, 0x77, 0x25, 0xc7, 0x60, 0x8a, 0x26, 0x2c, 0x8c, 0x54, 0xd7,
		0x3b, 0x54, 0xcd, 0x54, 0xcb, 0xf1, 0x7b, 0x8c, 0xa3, 0x12, 0x80, 0x98, 0x47, 0xc6, 0xd6, 0x49,
		0x68, 0xbe, 0xc1, 0x3d, 0x12, 0x82, 0xb1, 0xad, 0xe7, 0xf9, 0xe4, 0xae, 0xec, 0x24, 0x6c, 0xbf,
		0xcf, 0xb7, 0x1e, 0xc5, 0xee, 0x86, 0x19, 0xaf, 0x41, 0xc9, 0x33, 0xee, 0xa4, 0xa2, 0xf9, 0x03,
		0xbe, 0xd2, 0x04, 0x80, 0xc1, 0xaf, 0xc0, 0xe9, 0x99, 0x65, 0x22, 0x05, 0xd9, 0x1f, 0x32, 0xb2,
		0xd5, 0x19, 0xa5, 0x82, 0xa5, 0x84, 0x93, 0x52, 0xfe, 0x11, 0x4f, 0x09, 0x28, 0xc6, 0xd5, 0xc3,
		0x67, 0x05, 0x4f, 0x1d, 0x9c, 0xcc, 0x6b, 0x7f, 0xcc, 0xbd, 0x46, 0xb1, 0x11, 0xaf, 0xed, 0xc1,
		0x2a, 0x63, 0x3c, 0xd9, 0xba, 0xfe, 0x09, 0x4f, 0xac, 0x14, 0xbd, 0x1f, 0x5d, 0xdd, 0xcf, 0xc1,
		0x5a, 0xe0, 0x4e, 0xde, 0x94, 0x7a, 0xca, 0x48, 0x75, 0x52, 0x30, 0x7f, 0x93, 0x31, 0xf3, 0x8c,
		0x1f, 0x74, 0xb5, 0xde, 0xae, 0xea, 0x60, 0xf2, 0x97, 0xa1, 0xc6, 0xc9, 0xc7, 0x96, 0x8b, 0x34,
		0x7b, 0x68, 0x19, 0x77, 0x90, 0x9e, 0x82, 0xfa, 0x4f, 0x63, 0x4b, 0xb5, 0x1f, 0x82, 0x63, 0xe6,
		0x36, 0x08, 0x41, 0xaf, 0xa2, 0x18, 0x23, 0xc7, 0x76, 0xfd, 0x04, 0xc6, 0x3f, 0xe3, 0x2b, 0x15,
		0xe0, 0xda, 0x04, 0x26, 0xb5, 0xa0, 0x4a, 0x1e, 0xd3, 0x86, 0xe4, 0x9f, 0x33, 0xa2, 0x85, 0x09,
		0x8a, 0x25, 0x0e, 0xcd, 0x1e, 0x39, 0xaa, 0x9b, 0x26, 0xff, 0xfd, 0x05, 0x4f, 0x1c, 0x0c, 0xc2,
		0x12, 0x87, 0x7f, 0xe4, 0x20, 0x5c, 0xed, 0x53, 0x30, 0x7c, 0x8b, 0x27, 0x0e, 0x8e, 0x61, 0x14,
		0xbc, 0x61, 0x48, 0x41, 0xf1, 0x97, 0x9c, 0x82, 0x63, 0x30, 0xc5, 0x67, 0x26, 0x85, 0xd6, 0x45,
		0x43, 0xc3, 0xf3, 0x5d, 0xda, 0x0a, 0xdf, 0x9f, 0xea, 0xaf, 0xde, 0x8b, 0x36, 0x61, 0x72, 0x08,
		0x8a, 0x33, 0x11, 0xbb, 0x42, 0x25, 0x27, 0xa5, 0x64, 0xc3, 0xbe, 0xcd, 0x33, 0x51, 0x08, 0x86,
		0x6d, 0x0b, 0x75, 0x88, 0xd8, 0xed, 0x1a, 0x3e, 0x1f, 0xa4, 0xa0, 0xfb, 0x4e, 0xcc, 0xb8, 0x3e,
		0xc7, 0x62, 0xce, 0x50, 0xff, 0x33, 0xb6, 0x6e, 0xa2, 0xa3, 0x54, 0xd1, 0xf9, 0xd7, 0xb1, 0xfe,
		0x67, 0x9f, 0x22, 0x69, 0x0e, 0x59, 0x8c, 0xf5, 0x53, 0x62, 0xd2, 0xaf, 0x80, 0x6a, 0x3f, 0x79,
		0x97, 0xcd, 0x37, 0xda, 0x4e, 0x49, 0x3b, 0x38, 0xc8, 0xa3, 0x4d, 0x4f, 0x32, 0xd9, 0x1b, 0x77,
		0x83, 0x38, 0x8f, 0xf4, 0x3c, 0xd2, 0x75, 0x58, 0x88, 0x34, 0x3c, 0xc9, 0x54, 0x3f, 0xc5, 0xa8,
		0x2a, 0xe1, 0x7e, 0x47, 0xba, 0x0c, 0x79, 0xdc, 0xbc, 0x24, 0xc3, 0x7f, 0x9a, 0xc1, 0x89, 0xba,
		0xf4, 0x49, 0x28, 0xf2, 0xa6, 0x25, 0x19, 0xfa, 0x33, 0x0c, 0x1a, 0x40, 0x30, 0x9c, 0x37, 0x2c,
		0xc9, 0xf0, 0x9f, 0xe5, 0x70, 0x0e, 0xc1, 0xf0, 0xf4, 0x2e, 0xfc, 0x9b, 0x9f, 0xcb, 0xb3, 0xa2,
		0xc3, 0x7d, 0x77, 0x0d, 0xe6, 0x59, 0xa7, 0x92, 0x8c, 0xfe, 0x02, 0x7b, 0x39, 0x47, 0x48, 0xcf,
		0x41, 0x21, 0xa5, 0xc3, 0x7f, 0x81, 0x41, 0xa9, 0xbe, 0xd4, 0x84, 0x72, 0xa8, 0x3b, 0x49, 0x86,
		0xff, 0x22, 0x83, 0x87, 0x51, 0xd8, 0x74, 0xd6, 0x9d, 0x24, 0x13, 0xfc, 0x12, 0x37, 0x9d, 0x21,
		0xb0, 0xdb, 0x78, 0x63, 0x92, 0x8c, 0xfe, 0x65, 0xee, 0x75, 0x0e, 0x91, 0x5e, 0x80, 0x52, 0x50,
		0x6c, 0x92, 0xf1, 0xbf, 0xc2, 0xf0, 0x13, 0x0c, 0xf6, 0x40, 0xa8, 0xd8, 0x25, 0x53, 0xfc, 0x2a,
		0xf7, 0x40, 0x08, 0x85, 0xb7, 0x51, 0xbc, 0x81, 0x49, 0x66, 0xfa, 0x35, 0xbe, 0x8d, 0x62, 0xfd,
		0x0b, 0x5e, 0x4d, 0x92, 0xf3, 0x93, 0x29, 0x7e, 0x9d, 0xaf, 0x26, 0xd1, 0xc7, 0x66, 0xc4, 0x3b,
		0x82, 0x64, 0x8e, 0xdf, 0xe0, 0x66, 0xc4, 0x1a, 0x02, 0xa9, 0x07, 0xe2, 0x74, 0x37, 0x90, 0xcc,
		0xf7, 0x45, 0xc6, 0xb7, 0x34, 0xd5, 0x0c, 0x48, 0x2f, 0xc1, 0xea, 0xec, 0x4e, 0x20, 0x99, 0xf5,
		0x4b, 0x77, 0x63, 0x67, 0xb7, 0x70, 0x23, 0x20, 0xed, 0x4d, 0x4a, 0x4a, 0xb8, 0x0b, 0x48, 0xa6,
		0x7d, 0xf3, 0x6e, 0x34, 0x71, 0x87, 0x9b, 0x00, 0xa9, 0x01, 0x30, 0x29, 0xc0, 0xc9, 0x5c, 0x6f,
		0x31, 0xae, 0x10, 0x08, 0x6f, 0x0d, 0x56, 0x7f, 0x93, 0xf1, 0x5f, 0xe6, 0x5b, 0x83, 0x21, 0xf0,
		0xd6, 0xe0, 0xa5, 0x37, 0x19, 0xfd, 0x36, 0xdf, 0x1a, 0x1c, 0x82, 0x23, 0x3b, 0x54, 0xdd, 0x92,
		0x19, 0xbe, 0xca, 0x23, 0x3b, 0x84, 0x92, 0x3a, 0xb0, 0x34, 0x55, 0x10, 0x93, 0xa9, 0xbe, 0xc6,
		0xa8, 0x84, 0x78, 0x3d, 0x0c, 0x17, 0x2f, 0x56, 0x0c, 0x93, 0xd9, 0x7e, 0x3b, 0x56, 0xbc, 0x58,
		0x2d, 0x94, 0xae, 0x41, 0xd1, 0x1a, 0x9b, 0x26, 0xde, 0x3c, 0xe2, 0xfd, 0x7f, 0xb9, 0x57, 0xfb,
		0xb7, 0x7b, 0xcc, 0x3b, 0x1c, 0x20, 0x5d, 0x86, 0x02, 0x1a, 0x1d, 0x20, 0x3d, 0x09, 0xf9, 0xef,
		0xf7, 0x78, 0xc2, 0xc4, 0xda, 0xd2, 0x0b, 0x00, 0xf4, 0x6a, 0x84, 0x7c, 0xf6, 0x4b, 0xc0, 0xfe,
		0xc7, 0x3d, 0xf6, 0x9b, 0x9a, 0x09, 0x64, 0x42, 0x40, 0x7f, 0xa1, 0x73, 0x7f, 0x82, 0xf7, 0xa2,
		0x04, 0x64, 0x45, 0xae, 0xc2, 0xfc, 0x0d, 0xcf, 0xb6, 0x7c, 0x75, 0x98, 0x84, 0xfe, 0x4f, 0x86,
		0xe6, 0xfa, 0xd8, 0x61, 0x23, 0xdb, 0x45, 0xbe, 0x3a, 0xf4, 0x92, 0xb0, 0xff, 0xc5, 0xb0, 0x01,
		0x00, 0x83, 0x35, 0xd5, 0xf3, 0xd3, 0xcc, 0xfb, 0xbf, 0x39, 0x98, 0x03, 0xb0, 0xd1, 0xf8, 0xff,
		0x9b, 0xe8, 0x28, 0x09, 0xfb, 0x3e, 0x37, 0x9a, 0xe9, 0x4b, 0x9f, 0x84, 0x12, 0xfe, 0x97, 0xfe,
		0x50, 0x2e, 0x01, 0xfc, 0x3f, 0x0c, 0x3c, 0x41, 0xe0, 0x37, 0x7b, 0xbe, 0xee, 0x1b, 0xc9, 0xce,
		0xfe, 0x5f, 0xb6, 0xd2, 0x5c, 0x5f, 0x6a, 0x40, 0xd9, 0xf3, 0x75, 0x7d, 0xcc, 0xfa, 0xd3, 0x04,
		0xf8, 0x0f, 0xee, 0x05, 0x57, 0x16, 0x01, 0x06, 0xaf, 0xf6, 0xed, 0x9b, 0xbe, 0x63, 0x93, 0xcf,
		0x1c, 0x49, 0x0c, 0x77, 0x19, 0x43, 0x08, 0xb2, 0xd9, 0x9a, 0x7d, 0x7d, 0x0b, 0xdb, 0xf6, 0xb6,
		0x4d, 0x2f, 0x6e, 0x5f, 0xad, 0x27, 0xdf, 0xc0, 0xc2, 0x0f, 0x32, 0x50, 0x71, 0x90, 0xeb, 0xd9,
		0x16, 0xbb, 0x87, 0xcd, 0x8f, 0x54, 0xc3, 0x5a, 0x3b, 0xd9, 0xe5, 0x6d, 0x7d, 0x04, 0x73, 0x3d,
		0x42, 0x22, 0x8a, 0x90, 0xef, 0x84, 0x7e, 0x6d, 0x46, 0x7e, 0x4d, 0x7b, 0x1e, 0x4a, 0x0d, 0x5d,
		0x77, 0x91, 0xe7, 0x21, 0x8f, 0x7d, 0xf1, 0x59, 0xd8, 0xc0, 0xaf, 0xd9, 0x60, 0x62, 0x79, 0x32,
		0x2e, 0x3e, 0x0c, 0xa5, 0x3d, 0x64, 0x22, 0xe7, 0xd0, 0xb6, 0xf8, 0xf7, 0x9c, 0x89, 0x40, 0xca,
		0xbf, 0xff, 0x95, 0x33, 0x99, 0xfa, 0x55, 0x98, 0x67, 0x00, 0x71, 0x15, 0xe6, 0x3a, 0xf4, 0x67,
		0x7f, 0x19, 0xf2, 0x81, 0x86, 0x3d, 0x61, 0x79, 0xdf, 0x77, 0x11, 0xf2, 0xd9, 0x0d, 0x39, 0x7b,
		0xda, 0xcc, 0xbf, 0xff, 0x4f, 0x8f, 0x66, 0xfe, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xba, 0x1e, 0x60,
		0xb7, 0xea, 0x33, 0x00, 0x00,
	}
	r := bytes.NewReader(gzipped)
	gzipr, err := compress_gzip.NewReader(r)
	if err != nil {
		panic(err)
	}
	ungzipped, err := io_ioutil.ReadAll(gzipr)
	if err != nil {
		panic(err)
	}
	if err := github_com_gogo_protobuf_proto.Unmarshal(ungzipped, d); err != nil {
		panic(err)
	}
	return d
}
func (this *Person) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&main.Person{")
	if this.Name != nil {
		s = append(s, "Name: "+valueToGoStringPerson(this.Name, "string")+",\n")
	}
	if this.Addresses != nil {
		s = append(s, "Addresses: "+fmt.Sprintf("%#v", this.Addresses)+",\n")
	}
	if this.Telephone != nil {
		s = append(s, "Telephone: "+valueToGoStringPerson(this.Telephone, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Address) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&main.Address{")
	if this.Number != nil {
		s = append(s, "Number: "+valueToGoStringPerson(this.Number, "int64")+",\n")
	}
	if this.Street != nil {
		s = append(s, "Street: "+valueToGoStringPerson(this.Street, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPerson(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
